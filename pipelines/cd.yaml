trigger:
- main

name: Deploy Bicep files

variables:
  - group: 'aca-vars'
  - name: vmImageName
    value: 'ubuntu-latest'
  - name: location
    value: 'australiaeast'
  - name: locationShortName
    value: 'aue'
  - name: resourceGroupName
    value: 'aca-todolist-$(locationShortName)-rg'
  - name: azureServiceConnection
    value: 'internal_azure_subscription'
  - name: templateFile
    value: '/infra/main.bicep'
  - name: apiName
    value: 'todolist'
  - name: apiPort
    value: '8080'
  - name: mountPath
    value: '/etc/telegraf'
  - name: acrRepositoryName
    value: 'aca-todolist-demo-api'
  - name: acrName
    value: $[variables.acrName]userPrincipalId]
  - name: containerAppEnvId
    value: $[variables.containerAppEnvironmentId]
  - name: sqlCxnString
    value: $[variables.sqlCxnString]
  - name: sqlServerName
    value: $[variables.sqlServerName]
  - name: storageAccountName
    value: $[variables.storageAccountName]

resources:
  containers:
  - container: mycontainer # name of the container (Alias) 
    type: ACR
    azureSubscription: $(azureServiceConnection)
    resourceGroup: $(resourceGroupName)
    registry: $(acrName)
    repository: $(acrRepositoryName)
    trigger:
      tags:
      - latest # tag for the container image to use

pool:
  vmImage: $(vmImageName)

steps:
- task: AzureResourceManagerTemplateDeployment@3
  name: 'appDeployment'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '$(azureServiceConnection)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(resourceGroupName)'
    location: '$(location)'
    templateLocation: 'Linked artifact'
    csmFile: '../infra/app.bicep'
    deploymentMode: 'Incremental'
    deploymentName: 'DeployPipelineTemplate'
    deploymentOutputs: 'containerAppOutputs'
    overrideParameters: |
      -location $(location)
      -apiName: $(apiName)
      -apiPort: $(apiPort)
      -acrName: $(resources.container.mycontainer.registry)
      -grafanaPrincipalId: $(principalId)
      -containerImage: $(resources.container.mycontainer.repository):$(resources.container.mycontainer.tag)
      -userPrincipalId: $(principalId)
      -mountPath: $(mountPath)
